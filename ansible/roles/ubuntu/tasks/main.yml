---

- name: update LOCALE 
  sudo: yes
  shell: update-locale LANG=C LANGUAGE=C LC_ALL=C LC_MESSAGES=POSIX

- name: ensure basic ROS-related Ubuntu packages exist
  sudo: yes
  apt: name={{ item }} state=present update_cache=yes
  with_items:
     - curl
     - wget 
     - vim
     - git
     - g++
     - libusb-1.0-0-dev

- name: Check for ROS-related apt-sources exists
  sudo: yes 
  stat: path=/etc/apt/sources.list.d/ros-latest.list
  register: hasapt

- name: Ensure ROS-related apt-sources exists if necessary
  sudo: yes
  shell: touch /etc/apt/sources.list.d/ros-latest.list owner=root group=collective mode=0644
  when: hasapt.stat.exists == False
 
- name: get lsb release name
  shell: "echo deb http://packages.ros.org/ros/ubuntu $(/usr/bin/lsb_release -sc) main" 
  register: lsbversion
- name: configure apt-sources
  sudo: yes
  lineinfile: dest=/etc/apt/sources.list.d/ros-latest.list state=present line="{{ lsbversion.stdout }}"

    #Ansible doesn't understand HKP, so we cannot have nice things
- name: fetch keys
  sudo: yes
  shell: apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 0xB01FA116

- name: Update packages and install ROS base
  sudo: yes
  apt: name=ros-{{ rosdistro }}-ros-base state=present update_cache=yes

- name: Get roscore related packages
  sudo: yes
  apt: name=python-roslaunch state=present

- name: Get ros-install
  sudo: yes 
  apt: name=python-rosdep state=present

- name: init rosdep
  sudo: yes
  shell: rosdep init 

- name: rosdep update
  shell: rosdep update

- name: rosinstall
  sudo: yes
  apt: name=python-rosinstall state=present


- name: ensure a catkin workspace exists
  file: path=/home/{{robotuser}}/catkin_ws/src state=directory mode=0777

# Use catkin to finish setting up ROS
- name: Initialize catkin workspace for nodes
  shell: source /opt/ros/{{rosdistro}}/setup.bash && catkin_init_workspace chdir=/home/{{robotuser}}/catkin_ws/src
  args:
    executable: /bin/bash
  environment:
    PATH: "{{ ansible_env.PATH }}:/opt/ros/{{rosdistro}}/bin"
    PYTHONPATH: /opt/ros/{{rosdistro}}/lib/python2.7/dist-packages/
  ignore_errors: True

- name: Run initial catkin_makea
  shell: source /opt/ros/{{rosdistro}}/setup.bash && catkin_make chdir=/home/{{robotuser}}/catkin_ws
  args:
    executable: /bin/bash
  environment:
    PATH: "{{ ansible_env.PATH }}:/opt/ros/{{rosdistro}}/bin"
    PYTHONPATH: /opt/ros/{{rosdistro}}/lib/python2.7/dist-packages/
  ignore_errors: True

- name: add ros setup to bashrc
  sudo: yes
  shell: echo "source /opt/ros/{{rosdistro}}/setup.bash" >>/home/{{robotuser}}/.bashrc

- name: ensure robot-upstart is installed
  sudo: yes
  apt: name=ros-{{rosdistro}}-robot-upstart state=present update_cache=yes
  when: rosdistro != 'kinetic'

    #Now that we're done tromping about all over the filesystem, we should tidy up a bit...
- name: fix-up home permissions
  sudo: yes
  file: path=/home/{{robotuser}} owner={{robotuser}} group={{robotuser}} recurse=yes
