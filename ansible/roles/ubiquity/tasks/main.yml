---

- name: "check if ubiquity Pi image is present in {{ archive_dest_path }} "
  stat: path='{{ archive_dest_path }}'
  register: have_zip

 
- name: fetch the latest ubiquity Pi image(This will take a while)
  get_url: url='{{ archive_url }}' dest='{{ archive_dest_path }}' validate_certs=no
  when: have_zip.stat.exists == False

- name: unpack the zip file 
  unarchive: src='{{ archive_dest_path }}' dest=/tmp

- name: Turn off automounting of removable media, it messes with things we need to do with the SD card in a moment
  shell: gsettings set org.gnome.desktop.media-handling automount false

- name: Remove SD Cards and USB drives 
  pause: prompt="Hit Enter to continue"
 
- name: Wait for removable media to finish umounting
  pause: seconds=20

- name: Examining fixed volumes
  sudo: yes
  shell: fdisk -l|awk '/^\/dev/ { print $1}'|sed 's/[0-9]//g'|uniq >/tmp/fixed_vols
 
- name: scan complete. Now insert the SD card
  pause: prompt="Hit Enter to continue"

- name: Wait for media to mount
  pause: seconds=20

- name: Examining removable media 
  sudo: yes
  shell: fdisk -l|awk '/^\/dev/ { print $1}'|sed 's/[0-9]//g'|uniq >/tmp/all_vols

- name: Diff mountable devices
  sudo: yes
  shell: diff /tmp/fixed_vols /tmp/all_vols|tail -1|awk '{ print $2 }'
  register: targetdev
    
    #- fail: msg="NO SD CARD DETECTED *FAILING*. \n This error may also occur when there is no valid partition table on the card"
    #  when: targetdev is not defined

- name: Found the following removable media
  debug: msg="Looks like {{targetdev.stdout}} is an SD card"
  failed_when: targetdev is not defined
   
- name: READY TO WRITE SD CARD 
  pause: prompt="Hit Enter to continue and ERASE ALL DATA on {{targetdev.stdout}} . if this is not the device you want to use, hit CTRL-C to break out"
      
- name: "COPYING IMG TO {{ targetdev.stdout }} . This will take a few minutes..."
  sudo: yes
  shell: bmaptool copy --bmap /tmp/'{{ bmapname }}' /tmp/'{{ imgname }}' '{{ targetdev.stdout }}'

- name:  COPY COMPLETE REMOVE/RE-INSERT SD CARD
  pause: prompt="Remove {{ targetdev.stdout }} from this system, wait 10 seconds and re-insert. Hit Enter to continue"

- name: Wait for media to mount
  pause: seconds=20

- name: Get name of new Linux fs partition
  sudo: yes
  shell: "/sbin/fdisk -l '{{ targetdev.stdout }}'|tail -1|cut -d' ' -f 1 "
  register: urbi_part

- name: "Inflate 2nd partition to full size( using --force to get around geometry from .img file)"
  sudo: yes
  shell: sfdisk '{{ targetdev.stdout }}' < files/urbi.layout --force
  ignore_errors: true

- name: Run e2fsck JIC we need to cleanup from sfdisk remap
  sudo: yes
  shell: e2fsck -fp '{{ urbi_part.stdout }}' 

- name: Expand filesystem on 2nd partition
  sudo: yes
  shell: resize2fs '{{ urbi_part.stdout }}'
   
- name: Ready to boot
  pause: prompt="Place the SD card in your target host, plug it into the same network this host is on and power it on. Press ENTER when ready to check connectivity"

- name: Check for connectivity
  shell: ping -c 5 ubuntu.local


